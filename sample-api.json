{
  "openapi": "3.0.0",
  "info": {
    "title": "Sample E-commerce API",
    "version": "1.0.0",
    "description": "A simple e-commerce API for managing products, orders, and customers"
  },
  "servers": [
    {
      "url": "https://api.example-store.com/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get all products",
        "description": "Retrieve a list of all available products",
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "description": "Add a new product to the catalog",
        "tags": ["Products"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "description": "Retrieve a specific product by its ID",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Get all orders",
        "description": "Retrieve a list of all orders",
        "tags": ["Orders"],
        "responses": {
          "200": {
            "description": "List of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new order",
        "description": "Place a new order",
        "tags": ["Orders"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "summary": "Get all customers",
        "description": "Retrieve a list of all customers",
        "tags": ["Customers"],
        "responses": {
          "200": {
            "description": "List of customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique product identifier"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Product price in USD"
          },
          "category": {
            "type": "string",
            "description": "Product category"
          },
          "inStock": {
            "type": "boolean",
            "description": "Whether the product is in stock"
          }
        }
      },
      "ProductInput": {
        "type": "object",
        "required": ["name", "price", "category"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Product price in USD"
          },
          "category": {
            "type": "string",
            "description": "Product category"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique order identifier"
          },
          "customerId": {
            "type": "integer",
            "description": "Customer who placed the order"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "total": {
            "type": "number",
            "format": "float",
            "description": "Total order amount"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "shipped", "delivered"],
            "description": "Order status"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Order creation timestamp"
          }
        }
      },
      "OrderInput": {
        "type": "object",
        "required": ["customerId", "products"],
        "properties": {
          "customerId": {
            "type": "integer",
            "description": "Customer who is placing the order"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "Product identifier"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity ordered"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Price per item"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique customer identifier"
          },
          "name": {
            "type": "string",
            "description": "Customer full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Customer email address"
          },
          "phone": {
            "type": "string",
            "description": "Customer phone number"
          },
          "address": {
            "type": "string",
            "description": "Customer address"
          }
        }
      }
    }
  }
} 